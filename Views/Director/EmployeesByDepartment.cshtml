@model List<Staff_WebServer.Models.Department>

@{
    ViewData["Title"] = "Сотрудники по подразделениям";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var positions = ViewBag.Positions as List<Staff_WebServer.Models.Position>;
}

<h2 class="text-center mb-4">👥 Сотрудники по подразделениям</h2>

@foreach (var dept in Model)
{
    <div class="card shadow-sm mb-5">
        <div class="card-header bg-dark text-white">
            <h4 class="mb-0">@dept.Name</h4>
        </div>
        <div class="card-body bg-light">
            @if (dept.Employees != null && dept.Employees.Any())
            {
                <div class="table-responsive">
                    <table class="table table-bordered table-hover align-middle text-center">
                        <thead class="table-dark">
                        <tr>
                            <th>Таб. номер</th>
                            <th>ФИО</th>
                            <th>Должность</th>
                            <th>Дата приёма</th>
                            <th>Оклад</th>
                            <th>ИИН</th>
                            <th>Пол</th>
                            <th>Дата рождения</th>
                            <th>Иждивенцы</th>
                            <th>Адрес</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var emp in dept.Employees)
                        {
                            <tr>
                                <td>@emp.Id</td>
                                <td ondblclick="editField(this, @emp.Id, 'FullName')">
                                    <span class="editable-cell">@emp.FullName</span>
                                    <input class="edit-input form-control d-none" type="text" value="@emp.FullName"
                                           onkeydown="saveField(event, this, @emp.Id, 'FullName')" />
                                </td>
                                <td ondblclick="editDropdown(this, @emp.Id, 'Position')">
                                    <span class="editable-cell">@emp.Position?.Name</span>
                                    <select class="edit-dropdown form-control d-none"
                                            onchange="saveDropdown(this, @emp.Id, 'Position')">
                                        @foreach (var pos in positions)
                                        {
                                            <option value="@pos.Id" selected="@(pos.Id == emp.PositionId ? "selected" : null)">
                                                @pos.Name
                                            </option>
                                        }
                                    </select>
                                </td>
                                <td>@emp.HireDate.ToShortDateString()</td>
                                <td ondblclick="editField(this, @emp.Id, 'Salary')">
                                    <span class="editable-cell">@($"{emp.Salary:N0} ₸")</span>
                                    <input class="edit-input form-control d-none" type="number" step="1000"
                                           value="@emp.Salary"
                                           onkeydown="saveField(event, this, @emp.Id, 'Salary')" />
                                </td>
                                <td>@emp.IIN</td>
                                <td>@(emp.Gender?.ToUpperInvariant())</td>
                                <td>@emp.BirthDate.ToShortDateString()</td>
                                <td class="text-center">@emp.Dependents</td>
                                <td>@emp.Address</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">Нет сотрудников в этом подразделении.</div>
            }
        </div>
    </div>
}

@section Scripts {
    <script>
        function editField(cell, employeeId, field) {
            const span = cell.querySelector('span');
            const input = cell.querySelector('input');
            input.value = span.textContent.replace(' ₸', '').trim();

            span.classList.add('d-none');
            input.classList.remove('d-none');
            input.focus();
        }

        function saveField(event, input, employeeId, field) {
            if (event.key === "Enter") {
                const newValue = input.value;
                const cell = input.parentElement;
                const span = cell.querySelector('span');

                fetch(`/Director/UpdateField/${employeeId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ field: field, value: newValue })
                });

                let displayValue = newValue;
                if (field === 'Salary') {
                    displayValue = parseFloat(newValue).toLocaleString('ru-RU') + " ₸";
                }

                span.textContent = displayValue;
                input.classList.add('d-none');
                span.classList.remove('d-none');
            }
        }

        function editDropdown(cell, employeeId, field) {
            const span = cell.querySelector('span');
            const select = cell.querySelector('select');

            span.classList.add('d-none');
            select.classList.remove('d-none');
            select.focus();
        }

        function saveDropdown(select, employeeId, field) {
            const newValue = select.value;
            const span = select.parentElement.querySelector('span');
            const selectedText = select.options[select.selectedIndex].text;

            fetch(`/Director/UpdateField/${employeeId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ field: field, value: newValue })
            });

            span.textContent = selectedText;
            select.classList.add('d-none');
            span.classList.remove('d-none');
        }
    </script>
}

<style>
    .editable-cell {
        cursor: pointer;
        border-bottom: 1px dashed #666;
    }

    .editable-cell:hover {
        background-color: #f0f0f0;
        color: #000;
    }

    .edit-input, .edit-dropdown {
        width: 100%;
        padding: 4px;
        font-size: 0.95rem;
        box-sizing: border-box;
    }

    td:nth-child(9) {
        text-align: center;
    }

    td:nth-child(5) span {
        white-space: nowrap;
        display: inline-block;
        max-width: 120px;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
