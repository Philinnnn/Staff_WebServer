@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.EntityFrameworkCore
@using Staff_WebServer.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject Staff_WebServer.Data.ApplicationDbContext DbContext

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);
        var employee = await DbContext.Employees
            .FirstOrDefaultAsync(e => e.Id == currentUser.ТабельныйНомер);

        string greeting = employee != null
            ? $"Здравствуйте, {GetName(employee.FullName)}!"
            : $"Здравствуйте, {User.Identity?.Name}!";

        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Employee" asp-action="Index">@greeting</a>
        </li>
        <li class="nav-item">
            <form asp-controller="Account" asp-action="Logout" method="post">
                @Html.AntiForgeryToken()
                <button type="submit" class="nav-link btn btn-link text-dark">Выйти</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Войти</a>
        </li>
    }
</ul>

@functions {
    public string GetName(string fullName)
    {
        var parts = fullName.Split(' ');
        if (parts.Length >= 3)
            return $"{parts[1]} {parts[2]}";
        if (parts.Length == 2)
            return parts[1];
        return fullName;
    }
}